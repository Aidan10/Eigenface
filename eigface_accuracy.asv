clear;
%Initialize variables and constants

people=40;%Number of different people to select max 7 for training set
poses=7;%Number of poses per person
k = 250;%Dimensionality reduction, must be greater than 5
pick = 18;%Individual person picked to reconstruct
%pv = [1 8 15 22 29 36 43 50 57 64 71];%Vector of face index in training set
%pv2 = [1 4 7 10 13 16 19 22 25 28 31];%Vector of face index in testing set
[pv,pv2] = pickvec(people);
m = people*poses;%Number of images
score_mat = zeros(people,4);

%Reads in the data and splits it into a training and test set
[X,Xtest,r,c] = read_data(people,poses);

%mean of input faces
Xmean = mean(X,2);
%Subtract the mean from the faces to feature normalize
Xnorm = X - Xmean;

%%%%John addition%%%%%%
%A = cov(Xnorm');

%A = A./(m-1);
V = ones(m,1);
it_max = 500;
tol = 1e-10;

% size(Xnorm)
% size(V)
%%%%%%%%%%%%%%%%%%%%


%Acquire the first k ordered eigenvectors and eigenvalues utilizing svd and qr
[eigvec_svd,eigval_svd] = pca_svd(Xnorm,k); 
[eigvec_qr,eigval_qr] = PCA_QR(Xnorm,k);

%%%%%John addition%%%%%%%%%%%
[eigvec_pow,eigval_pow] = pca_pow(Xnorm,V,it_max,tol,k);
size(eigvec_qr);
size(eigvec_pow);
%%%%%%%%%%%%%%%%

%Utilizing matlabs PCA function for comparison
[evectors, score, evalues] = pca(Xnorm');
evectors = evectors(:,1:k);

%Acquire k weights for each of the faces
W = weights(Xnorm,evectors,k);%PCA weights 
W_svd = weights(Xnorm,eigvec_svd,k);%SVD weights 
W_qr = weights(Xnorm,eigvec_qr,k);%QR weights 
W_pow = weights(Xnorm,eigvec_pow,k);%Power method weights 

%normalize the test set
Xtestnorm = Xtest-Xmean;

%Start loop
funcarray = {@pca,@pca_svd,@pca_qr,@pca_pow};
for j=1:1
    %Acquire the weights or the new projection of the test set 
    W_test = weights(Xtestnorm,eigvec_svd,k);

    %Compare the euclidean distances of the test set projection for the
    %specific person selected
    [mindist,person,dist] = match_face(W_svd,W_test(pv2(j),:));

    %Print both the search image and the closest training set image
    figure(1);hold on
    subplot(1,2,1)
    imshow(mat2gray(reshape(Xtest(:,pv2(j)),[112 92])))
    title('Face from Test Set')
    subplot(1,2,2)
    imshow(mat2gray(reshape(X(:,person),[112 92])))
    title('Match from Train Set')
    hold off

    %Measure the accuracy in recognition for each method
    if and((),())((person < pv(j+1)) and (person >= pv(j)))
        score_mat(j,1) = 1;
    end
end
%endloop